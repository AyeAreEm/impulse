@import "stdlib.h";
@import "string.h";

^_(usize len usize size) alloc: {
    @c [ return calloc(len, size); ];
}

^_(^_ address usize new_size) re_alloc: {
    @c [ return realloc(address, new_size); ];
}

^_(^_ dest ^_ src usize n) mem_copy: {
    @c [ return memcpy(dest, src, n); ];
}

^_(^_ str int c usize n) mem_set: {
    @c [ return memset(str, c, n); ];
}

^_(^_ dest ^_ src usize n) mem_move: {
    @c [ return memmove(dest, src, n); ];
}

int(^_ ptr1 ^_ ptr2 usize n) mem_compare: {
    @c [ return memcmp(ptr1, ptr2, n);];
}

_(^_ block) free_mem: {
    @c [
        free(block);
    ];
}
